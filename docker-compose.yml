services:
 web:
    build: .
    container_name: LogWeb
    ports:
      - 8000:8000
    volumes:
      - ./src:/app  
    depends_on:
      db:
        condition: service_healthy 
        restart: true
    env_file:
      - .env
    networks:
      - host
 db:
  image: postgres:17
  container_name: LogWeb_postgres_db
  volumes:
    - postgres_db:/var/lib/postgresql/data
  environment:
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    POSTGRES_DB: ${POSTGRES_DB}
    POSTGRES_USER: ${POSTGRES_USER}
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
    interval: 10s
    retries: 5
    start_period: 30s
    timeout: 10s
  networks:
    - host
 redis:
    image: redis:7
    container_name: LogWeb_redis_cache
    ports:
      - 6379:6379
    restart: always
    networks:
      - host
 celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: LogWeb_celery
    command: celery -A config worker --loglevel=info
    volumes:
      - ./src:/app
    depends_on:
      - redis
      - web
    env_file:
      - .env
    networks:
      - host
 mail:
    image: mailhog/mailhog
    container_name: LogWeb_mail
    ports:
      - 8025:8025
    networks:
      - host
volumes:
  postgres_db:
networks:
  host:
